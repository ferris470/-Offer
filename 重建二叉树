题目描述
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

解题思路：用pre的第一个元素确定root，用in序列root左边的元素确定左子树，右边的元素确定右子树
public class Solution {
    public TreeNode reConstructBinaryTree(int [] pre,int [] in) {
        if(pre.length==0)
            return null;
        TreeNode root = new TreeNode(pre[0]);
        if(pre.length==1)
            return root;
        int index = -1;
        for(int i = 0;i<in.length;i++){
            if(in[i]==pre[0]){
            	index = i;
            	break;
            }
        }
        int presplit = index+1;
        int[] preleft = Arrays.copyOfRange(pre,1,presplit);
        int[] preright = Arrays.copyOfRange(pre,presplit,pre.length);
        int[] inleft = Arrays.copyOfRange(in,0,index);
        int[] inright = Arrays.copyOfRange(in,index+1,in.length);
        root.left = reConstructBinaryTree(preleft,inleft);
        root.right = reConstructBinaryTree(preright,inright);
        return root;
    }
}
